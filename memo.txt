現在のUserテーブルをCharacterテーブルに変える。
Characterテーブルにr18フラグを作る。
もし０なら｛健全キャラなので何もしない｝
さもなく、もし１なら｛R18要素あるため一般ユーザーに表示しない＆￥n
通常の掲示板に参加できない[裏掲示板の作成]｝

新しく設置したUserCharacterには
メアド
パスワード
年齢
性別
idなどは自動追加


  =begin
  name　名前
  email　メールアドレス
  description　フリースペース
  image　画像（アイコン）
  password　パスワード
  user_id　ユーザーID
  integer　アクティブユーザー間利用
  sex　　　　　性別
  original_work　原作
  race　種族
  height　身長
  width　体重
  age  年齢
  street_address　キャラの住所
  twitter　ツイッター
  facebook　フェイスブック
  homepage　ホームページ
  link_icon　フレンドのID
  =end


  sudo apt-get remove --purge mysql-server* mysql-common
  sudo apt-get autoremove --purge
  sudo rm -r /etc/mysql
  sudo rm -r /var/lib/mysql










それぞれ下線を入れる

//name
name
sex  age        //sex 0=♂　1=♀
birthday        //year月man月day日
height / width
//original date
原作：original_work
種族：race
story/friend  //aボタンバックグランド黄緑

nameとsotry/friendは高さ60px
それ以外は高さ40px



rails db:create
rails db:schema:load
rails db:seed

は

bundle exec rake db:create
bundle exec rake db:schema:load
mysql -uroot -D my_t_base_development < mysql.sql

と同じ







新規データベース作成前メモ


Mypage

users.all id
chats.all user_id
borad.all user_id
characters.all user_id host_id

# borads borad_id => users id

Myroom

room_title
room_stage
room_lock
room_setting => room_setting_tablle
room_description
room_active
room_report

My_relation

user_id
frend_id
frend_description
delete_flag

Usage_history

borad => borad_id
user_id
borad => borad_id

Message

characters character_id => character_id
message_user_id
ランダムな数字 => search_id


Favorite_room

borads borad_id => borad_id
users id => user_id
delete_flag

Hide_setting

r_18_content (0 or 1)
r_18G_content (0 or 1)

#hide_wordは別テーブルにて

Hide_word

users id => user_id
hide_word

Mycharacter_create

image
name
sex
birthday
different_birthday
height
width
r_18_setting
original_work
race
description
twitter
homepage

Other_changes

users =>{
name
email
password
birthday
sex
}

Block_user
users id => user_id
block(user_id) => block_user_id

Following_user

users id => user_id
follow(users id) => follow_user_id


〜〜ここまで




@mixinの使い方

@mixin 関数名{
関数内定義
}
@include 関数

~~
@mixin 関数名（引数）{
関数内定義(引数はrubyの引数と同じ感じで使える)
}
@include 関数（引数）

~~

変数宣言＝$変数名








git add .

git commit -m "comment"

git log

git push -u origin master




http://qiita.com/iron-breaker/items/6da9e0f1af0b4c2c1cfa


1.2.3git reset --hard コミット、インデックス、ファイル変更すべて削除
1.2./git reset --mixed コミット、インデックスを削除、ファイルの変更 は残す
/./.3git reset --soft コミットだけ削除、インデックスとファイル変更は残す
























































-----
